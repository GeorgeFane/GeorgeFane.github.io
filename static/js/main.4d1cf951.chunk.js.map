{"version":3,"sources":["Me.js","RatingsMap/SearchAppBar.js","RatingsMap/ScrollTabs.js","RatingsMap/TestTabs.js","RatingsMap/RatingsMap.js","CrypChar/contract.js","env.js","CrypChar/Dgrid.js","CrypChar/Form.js","CrypChar/TempDrawer.js","CrypChar/CrypChar.js","DataViz/Mdining.js","DataViz/CryptoQuotes.js","DataViz/DataViz.js","App.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","paper","padding","spacing","textAlign","color","palette","text","secondary","links","href","icon","GitHub","LinkedIn","Create","CenteredGrid","classes","className","Grid","container","item","xs","width","src","Paper","Typography","variant","ButtonGroup","orientation","size","map","link","Button","target","startIcon","menuButton","marginRight","title","display","breakpoints","up","search","position","borderRadius","shape","backgroundColor","fade","common","white","marginLeft","searchIcon","height","pointerEvents","alignItems","justifyContent","inputRoot","inputInput","paddingLeft","transition","transitions","create","background","colors","split","url","axios","get","params","apikey","s","type","then","x","data","Search","getSeason","imdbID","Season","i","CommentForm","props","state","rows","show","seasons","onChange","bind","onSubmit","this","handleSubmit","TextField","label","required","inputRef","textarea","body","length","justify","filter","tile","Poster","onClick","handleSelect","alt","Title","Box","component","numbers","forEach","season","row","Episodes","episode","Episode","imdbRating","push","Math","max","Object","keys","Number","columns","field","headerName","index","process","autoHeight","getCellClassName","value","isNaN","entries","Form","ImageGridList","RatingsMap","event","preventDefault","setState","console","log","getShow","totalSeasons","requests","all","spread","responses","response","getAll","React","Component","withStyles","contract","address","abi","env","omdb","truffle","DataGridDemo","pageSize","sortModel","sort","continents","user","charity","store","send","agent","donate","spend","continent","memo","web3","eth","sendTransaction","from","to","on","hash","myContract","methods","give","Date","toISOString","take","select","MenuItem","flexDirection","list","fullList","TemporaryDrawer","useState","top","left","bottom","right","toggleDrawer","anchor","open","key","clsx","role","onKeyDown","List","cont","ListItem","ListItemText","primary","bals","Fragment","Drawer","onClose","Web3","Contract","Map","getEvents","error","returnValues","id","TimestampEST","hex2ascii","Memo","Value","Continent","getPastEvents","fromBlock","toBlock","load","call","result","renderCell","Tooltip","placement","resp","Foods","food","trim","join","currencyFormatter","Intl","NumberFormat","style","currency","usdPrice","valueFormatter","format","cellClassName","pct","valueFormatted","toLocaleString","tabs","content","Mdining","repo","sub","CryptoQuotes","LabTabs","setValue","TabContext","TabList","newValue","tab","Tab","IconButton","fontSize","Home","Me","TableChart","DataViz","AccountBalance","CrypChar","LiveTv","drawerWidth","light","dark","App","setOpen","handleDrawerOpen","handleDrawerClose","switchTheme","AppBar","appBar","appBarShift","Toolbar","edge","hide","Menu","Brightness3","Brightness7","drawer","drawerOpen","drawerClose","toolbar","ChevronLeft","Divider","button","ListItemIcon","concat","appliedTheme","createMuiTheme","ThemeProvider","CssBaseline","Top","Side","Bottom","default","zIndex","easing","sharp","duration","leavingScreen","enteringScreen","flexShrink","whiteSpace","overflowX","mixins","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4d1cf951.chunk.js","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Grid, Typography, Paper, ThemeProvider, Tooltip, Button, ButtonGroup } from '@material-ui/core';\nimport { GitHub, LinkedIn, Create } from '@material-ui/icons';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    paper: {\n        padding: theme.spacing(2),\n        textAlign: 'center',\n        color: theme.palette.text.secondary,\n    },\n}));\n\nfunction CenteredGrid() {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <Grid container spacing={3}>\n                <Grid item xs={3}>\n                    <img\n                        width='100%'\n                        src='https://avatars.githubusercontent.com/u/39439818?v=4'\n                    />\n                </Grid>\n\n                <Grid item xs={3}>\n                    <Paper className={classes.paper}>\n                        <Typography variant='h6'>\n                            Hi! I'm George Fane, a sophomore at the University of Michigan studying Business Adminstration and Computer Science.\n                        </Typography>\n                    </Paper>\n                </Grid>\n\n                <Grid item xs={3}>\n                    <Paper className={classes.paper}>                        \n                        <ButtonGroup \n                            variant=\"text\" orientation='vertical' size='large'\n                        >\n                            {links.map(link => <Button\n                                href={link.href}\n                                target='_blank'\n                                startIcon={link.icon}\n                            >\n                                {link.text}\n                            </Button>)}\n                        </ButtonGroup>\n                    </Paper>\n                </Grid>\n            </Grid>\n        \n            <Grid container spacing={3}>\n                <Grid item xs={3}>\n                </Grid>\n\n                <Grid item xs={3}>\n                    <Paper className={classes.paper}>\n                        <Typography variant='h6'>\n                            I've liked the show Mad Men for a while, but just this summer I got into music and movies from that era. Since May I've watched seven Audrey Hepburn films as well as Some Like It Hot, Casablanca, and Singin' in the Rain. It's simply a joy to go into a Ross Building conference rooms, turn off the lights, put my feet up, and start an old movie.\n                        </Typography>\n                    </Paper>\n                </Grid>\n            </Grid>\n        \n        </div>\n    );\n}\n\nconst links = [\n    {\n        href: \"https://github.com/GeorgeFane\", \n        icon: <GitHub />, text: 'GitHub'\n    },\n    {\n        href: \"https://www.linkedin.com/in/george-fane/\",\n        icon: <LinkedIn />, text: 'LinkedIn'\n    },\n    {\n        href: \"https://www.georgefane.com/\",\n        icon: <Create />, text: 'Blog'\n    },\n]\n\nfunction Home() {\n        return (\n                <Grid container spacing={3}>\n                        <Grid item xs>\n                        </Grid>\n\n                        <Grid item xs>\n                                <Paper>\n                                        <Typography variant='h6'>\n                                                Hi! I'm George Fane, a sophomore at the University of Michigan studying Business Adminstration and Computer Science.\n                                        </Typography>\n                                </Paper>\n                        </Grid>\n                        \n                        <ButtonGroup \n                                variant=\"text\" orientation='vertical' size='large'\n                        >\n                                {links.map(link => <Button\n                                        href={link.href}\n                                        target='_blank'\n                                        startIcon={link.icon}\n                                >\n                                        {link.text}\n                                </Button>\n                                )}\n                        </ButtonGroup>\n                </Grid>\n        );\n}\n\nexport default CenteredGrid;\n                                                ","import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport InputBase from '@material-ui/core/InputBase';\nimport { fade, makeStyles } from '@material-ui/core/styles';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport SearchIcon from '@material-ui/icons/Search';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    title: {\n        display: 'none',\n        [theme.breakpoints.up('sm')]: {\n            display: 'block',\n        },\n    },\n    search: {\n        position: 'relative',\n        borderRadius: theme.shape.borderRadius,\n        backgroundColor: fade(theme.palette.common.white, 0.15),\n        '&:hover': {\n            backgroundColor: fade(theme.palette.common.white, 0.25),\n        },\n        marginLeft: 0,\n        width: '100%',\n        [theme.breakpoints.up('sm')]: {\n            marginLeft: theme.spacing(9),\n            width: 'auto',\n        },\n    },\n    searchIcon: {\n        padding: theme.spacing(0, 2),\n        height: '100%',\n        position: 'absolute',\n        pointerEvents: 'none',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    inputRoot: {\n        color: 'inherit',\n    },\n    inputInput: {\n        padding: theme.spacing(1, 1, 1, 0),\n        // vertical padding + font size from searchIcon\n        paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n        transition: theme.transitions.create('width'),\n        width: '100%',\n        [theme.breakpoints.up('sm')]: {\n            width: '12ch',\n            '&:focus': {\n                width: '20ch',\n            },\n        },\n    },\n}));\n\nexport default function SearchAppBar(props) {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <AppBar position=\"static\">\n                <Toolbar>\n                    <IconButton\n                        edge=\"start\"\n                        className={classes.menuButton}\n                        color=\"inherit\"\n                        aria-label=\"open drawer\"\n                    >\n                        <MenuIcon />\n                    </IconButton>\n                    <Typography className={classes.title} variant=\"h6\" noWrap>\n                        RatingsMap\n                    </Typography>\n                    <div className={classes.search}>\n                        <div className={classes.searchIcon}>\n                            <SearchIcon />\n                        </div>\n                        <InputBase\n                            placeholder=\"Search\"\n                            classes={{\n                                root: classes.inputRoot,\n                                input: classes.inputInput,\n                            }}\n                            inputProps={{ 'aria-label': 'search' }}\n                            onChange={props.onChange}\n                        />\n                    </div>\n                </Toolbar>\n            </AppBar>\n        </div>\n    );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport Paper from '@material-ui/core/Paper';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        backgroundColor: theme.palette.background.paper,\n    },\n}));\n\nexport default function ScrollableTabsButtonAuto(props) {\n    const classes = useStyles();\n    const [value, setValue] = React.useState(0);\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    };\n        \n    var entries = Object.entries(props.show);\n    if (!entries.length){\n        return <div></div>;\n    }\n\n    entries.splice(14, 1);\n    return (\n        <Paper className={classes.root}>\n            <AppBar position=\"static\" color=\"default\">\n                <Tabs\n                    value={value}\n                    onChange={handleChange}\n                    indicatorColor=\"primary\"\n                    textColor=\"primary\"\n                    variant=\"scrollable\"\n                    scrollButtons=\"auto\"\n                    aria-label=\"scrollable auto tabs example\"\n                >\n                    {entries.map( ([key, value]) => (\n                        <Tab label={key} />\n                    ))}\n                </Tabs>\n            </AppBar>\n            \n            <Box p={3}>\n                <Typography>{entries[value][1]}</Typography>\n            </Box>\n            \n        </Paper>\n    );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport PhoneIcon from '@material-ui/icons/Phone';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport PersonPinIcon from '@material-ui/icons/PersonPin';\nimport HelpIcon from '@material-ui/icons/Help';\nimport ShoppingBasket from '@material-ui/icons/ShoppingBasket';\nimport ThumbDown from '@material-ui/icons/ThumbDown';\nimport ThumbUp from '@material-ui/icons/ThumbUp';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`scrollable-force-tabpanel-${index}`}\n      aria-labelledby={`scrollable-force-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box p={3}>\n          <Typography>{children}</Typography>\n        </Box>\n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `scrollable-force-tab-${index}`,\n    'aria-controls': `scrollable-force-tabpanel-${index}`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    width: '100%',\n    backgroundColor: theme.palette.background.paper,\n  },\n}));\n\nexport default function ScrollableTabsButtonForce() {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\" color=\"default\">\n        <Tabs\n          value={value}\n          onChange={handleChange}\n          variant=\"fullWidth\"\n          scrollButtons=\"on\"\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n          aria-label=\"scrollable force tabs example\"\n        >\n          <Tab label=\"Item One\" icon={<PhoneIcon />} {...a11yProps(0)} />\n          <Tab label=\"Item Two\" icon={<FavoriteIcon />} {...a11yProps(1)} />\n          <Tab label=\"Item Three\" icon={<PersonPinIcon />} {...a11yProps(2)} />\n          <Tab label=\"Item Four\" icon={<HelpIcon />} {...a11yProps(3)} />\n          <Tab label=\"Item Five\" icon={<ShoppingBasket />} {...a11yProps(4)} />\n          <Tab label=\"Item Six\" icon={<ThumbDown />} {...a11yProps(5)} />\n          <Tab label=\"Item Seven\" icon={<ThumbUp />} {...a11yProps(6)} />\n        </Tabs>\n      </AppBar>\n      <TabPanel value={value} index={0}>\n        Item One\n      </TabPanel>\n      <TabPanel value={value} index={1}>\n        Item Two\n      </TabPanel>\n      <TabPanel value={value} index={2}>\n        Item Three\n      </TabPanel>\n      <TabPanel value={value} index={3}>\n        Item Four\n      </TabPanel>\n      <TabPanel value={value} index={4}>\n        Item Five\n      </TabPanel>\n      <TabPanel value={value} index={5}>\n        Item Six\n      </TabPanel>\n      <TabPanel value={value} index={6}>\n        Item Seven\n      </TabPanel>\n    </div>\n  );\n}\n","import React from \"react\";\nimport axios from \"axios\";\n\nimport { TextField, Box, Grid, Tooltip, IconButton, Typography, InputBase } from '@material-ui/core';\nimport { GitHub } from '@material-ui/icons';\nimport { DataGrid } from '@material-ui/data-grid';\nimport { withStyles, createMuiTheme } from '@material-ui/core/styles';\n\nimport SearchAppBar from './SearchAppBar';\nimport ScrollTabs from './ScrollTabs';\nimport TestTabs from './TestTabs';\n\nvar colors = 'darkGreen green goldenRod darkGoldenRod indianRed fireBrick'.split(' ');\nconst useStyles = theme => {\n    var root = { padding: theme.spacing(3) };\n    colors.forEach(color => {\n        root['& .' + color] = { backgroundColor: color };\n    })\n    return { root: root };\n};\n\n// api functions\nconst url = 'https://www.omdbapi.com/';\n\nfunction search(title) {\n    return axios.get(url, {\n        params: {\n            apikey: '14f8eef1',\n            s: title,\n            type: 'series',\n        }\n    })\n        .then(x => x.data.Search || []);\n}\n\nfunction getShow(imdbID) {\n    return axios.get(url, {\n        params: {\n            apikey: '14f8eef1',\n            i: imdbID,\n        }\n    })\n        .then(x => x.data || []);\n}\n\nfunction getSeason(imdbID, Season) {\n    return axios.get(url, {\n        params: {\n            apikey: '14f8eef1',\n            i: imdbID,\n            Season: Season,\n        }\n    });\n}\n\nfunction getAll(imdbID, totalSeasons) {\n    var requests = [];\n    for (var i = 0; i < totalSeasons; i++){\n        requests.push(\n            getSeason(imdbID, i + 1)\n        );\n    }\n    return axios.all(requests)\n        .then(axios.spread( (...responses) => (\n            responses.map(response => response.data) \n        )));\n}\n\nclass CommentForm extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            rows: [],\n            show: {},\n            seasons: [],\n        }\n\n        this.onChange = this.onChange.bind(this);\n    }\n\n    // components\n\n    Form() {\n        return (\n            <form onSubmit={this.handleSubmit.bind(this)}>\n                <TextField \n                    label='Search Show'\n                    variant='filled'\n                    required\n                    inputRef={(textarea) => this.body = textarea}\n                />\n            </form>\n        );\n    }\n\n    ImageGridList() {\n        if (this.state.rows.length) {\n            return (\n                <Grid container justify='left' spacing={2}>\n                    {this.state.rows\n                        .filter(tile => tile.Poster !== 'N/A')\n                        .map((tile) => (\n                            <Grid item onClick={() => this.handleSelect(tile.imdbID)}>\n                                <img src={tile.Poster} alt={tile.Title} width={144} />\n                            </Grid>\n                        )\n                    )}\n                </Grid>\n            );\n        }\n        \n        <Box component=\"div\" display=\"inline\">inline</Box>\n        return this.state.rows\n            .map((tile) => (\n                <Box component=\"div\" display=\"inline\">\n                    <img src={tile.Poster} alt={tile.Title} width={99} />\n                </Box>\n            ));\n    }\n    \n    process() {\n        var seasons = this.state.seasons;\n        if (!seasons.length){\n            return false;\n        }\n    \n        var rows = []\n        var numbers = [];\n        seasons.forEach(season => {\n            var row = {};\n            const episodes = season.Episodes || [];\n            episodes.forEach(episode => {\n                row[episode.Episode] = episode.imdbRating\n            });\n            rows.push(row);\n    \n            numbers.push(\n                Math.max( ...Object.keys(row).map(Number) )\n            );\n        })\n        \n        var max = Math.max( ...numbers );\n        var columns = [{ \n            field: 'id',\n            headerName: 'Season',\n        }]\n        for (var i = 1; i < max + 1; i++){\n            columns.push({\n                field: i,\n                headerName: 'E' + i,\n            });\n        }\n        \n        rows.forEach((row, index) => row['id'] = index + 1);\n    \n        return {\n            rows: rows,\n            columns: columns,\n        };\n    }\n\n    RatingsMap() {\n        const data = this.process();\n        if (!data){\n            return <div></div>;\n        }\n        \n        const { classes } = this.props;\n        return (\n            <Box className={classes.root}>\n                <DataGrid \n                    {...data}\n                    autoHeight\n                    getCellClassName={(params) => {\n                        if (params.field === 'id' || !params.value || isNaN(params.value)) {\n                            return '';\n                        }\n                        for (const [index, color] of colors.entries()) {\n                            if (Number(params.value) >= (9 - index)) {\n                                return color;\n                            }\n                        }\n                        return colors[colors.length - 1];\n                    }}\n                />\n            </Box>\n        );\n    }\n\n    render() {\n        return (\n            <div>\n\n                {this.Form()}\n                <br />\n\n                {this.ImageGridList()}\n                <br />\n\n                {this.RatingsMap()}\n            </div>\n        );\n    }\n    \n    // hooks\n\n    handleSubmit(event) { \n        event.preventDefault();     // prevents page from reloading on submit\n        search(this.body.value)\n            .then(x => {\n                this.setState({ rows: x });\n            });\n    }\n\n    onChange(event) { \n        event.preventDefault();     // prevents page from reloading on submit\n        console.log(event.target.value);\n        search(event.target.value)\n            .then(x => {\n                this.setState({ rows: x });\n            });\n    }\n    \n    handleSelect(imdbID) {\n        getShow(imdbID)\n            .then(x => {\n                this.setState({ show: x });\n\n                getAll(\n                    this.state.show.imdbID,\n                    Number(this.state.show.totalSeasons),\n                )\n                    .then(x => {\n                        this.setState({ seasons: x });\n                    });\n            });        \n    }\n} // end CommentForm component\n\nexport default withStyles(useStyles)(CommentForm);","const contract = {    \n    address: '0x34b41A8f1b89e94F9E50283DD9F3a296C620E2fA',\n    abi: [\n\t{\n\t\t\"anonymous\": false,\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"indexed\": false,\n\t\t\t\t\"internalType\": \"bytes\",\n\t\t\t\t\"name\": \"TimestampEST\",\n\t\t\t\t\"type\": \"bytes\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"indexed\": false,\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"From\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"indexed\": false,\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"To\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"indexed\": false,\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"Continent\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"indexed\": false,\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"Value\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"indexed\": false,\n\t\t\t\t\"internalType\": \"bytes\",\n\t\t\t\t\"name\": \"Memo\",\n\t\t\t\t\"type\": \"bytes\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"indexed\": false,\n\t\t\t\t\"internalType\": \"bytes\",\n\t\t\t\t\"name\": \"TxnHash\",\n\t\t\t\t\"type\": \"bytes\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"trans\",\n\t\t\"type\": \"event\"\n\t},\n\t{\n\t\t\"stateMutability\": \"payable\",\n\t\t\"type\": \"fallback\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"bals\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"string\",\n\t\t\t\t\"name\": \"time\",\n\t\t\t\t\"type\": \"string\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"to\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"cont\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"value\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"string\",\n\t\t\t\t\"name\": \"memo\",\n\t\t\t\t\"type\": \"string\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"string\",\n\t\t\t\t\"name\": \"hash\",\n\t\t\t\t\"type\": \"string\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"give\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"bool\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"bool\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"string\",\n\t\t\t\t\"name\": \"time\",\n\t\t\t\t\"type\": \"string\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"to\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"cont\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"value\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"string\",\n\t\t\t\t\"name\": \"memo\",\n\t\t\t\t\"type\": \"string\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"string\",\n\t\t\t\t\"name\": \"hash\",\n\t\t\t\t\"type\": \"string\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"take\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"bool\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"bool\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"function\"\n\t}\n]\n}\n\nexport default contract","const env = {\n    omdb: '14f8eef1',\n    truffle: '8f7572d1-e253-420a-93bc-2ed8a6f051e6',\n}\n\nexport default env;","import * as React from 'react';\nimport { DataGrid } from '@material-ui/data-grid';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n    root: {\n        '& .charity': {\n            backgroundColor: 'red',\n        },\n    },\n});\n\nconst charity = '0x596Aa50158BFf76F8D08F848d701C83a4F754d9c';\n\nconst fields = 'id TimestampEST From To Continent Value Memo TxnHash'.split(' ');\nconst columns = [\n    { field: 'id', type: 'number' },\n    { field: 'TimestampEST' },\n    { field: 'From' },\n    { field: 'To' },\n    { field: 'Continent' },\n    { field: 'Value', type: 'number' },\n    { field: 'Memo' },\n    { field: 'TxnHash' },\n]\n\nexport default function DataGridDemo({ rows }) {\n    const classes = useStyles();\n\n    return rows.length ? (\n        <div className={classes.root}>\n            <DataGrid\n                rows={rows}\n                columns={columns}\n                autoHeight\n                pageSize={5}\n                getCellClassName={(params) => params.field === 'From' && params.value === charity ? 'charity' : ''\n                }\n                sortModel={[{\n                    field: 'id',\n                    sort: 'desc',\n                }]}\n            />\n        </div>\n    ) : (\n        <div>Loading rows...</div>\n    );\n}\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Typography, Box, Paper, Button, Grid, InputLabel, MenuItem, FormHelperText, FormControl, Select, TextField } from '@material-ui/core';\n\nconst useStyles = theme => ({\n    root: {\n        flexGrow: 1,\n    },\n    title: {\n        padding: theme.spacing(1),\n    },\n    paper: {\n        padding: theme.spacing(1),\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"center\",\n        height: '100%',\n    },\n});\n\nconst continents = ['Asia', 'Africa', 'North America', 'South America', 'Antarctica', 'Europe', 'Australia']\n\nconst user = \"0x61eB15d8A761Fc80387F50d84Fbf7Ff47a97d92F\";\nconst charity = \"0x596Aa50158BFf76F8D08F848d701C83a4F754d9c\";\nconst store = \"0xAf951AE00Ab357b8a2cFa66901E0D4D0F96e397B\";\n\nclass Form extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            agent: null,\n            continent: null,\n            value: 0,\n            memo: '',\n        };\n    }\n\n    donate() {\n        this.props.web3.eth.sendTransaction({\n            from: user,\n            to: charity,\n            value: this.state.value\n        })\n            .on('transactionHash', hash => {\n                this.props.myContract.methods.give(\n                    new Date().toISOString(), \n                    charity, \n                    this.state.continent,\n                    this.state.value, \n                    '',\n                    hash\n                ).send({ from: user });\n            });\n    }\n\n    spend() {\n        this.props.web3.eth.sendTransaction({\n            from: charity,\n            to: store,\n            value: this.state.value\n        })\n            .on('transactionHash', hash => {\n                this.props.myContract.methods.take(\n                    new Date().toISOString(), \n                    store, \n                    this.state.continent,\n                    this.state.value, \n                    this.state.memo,\n                    hash\n                ).send({ from: charity });\n            });\n    }\n\n    send = (event) => this.state.agent === 'User' ? \n        this.donate() : this.spend();\n\n    render() {\n        const classes = this.props.classes;\n        return (\n            <Grid container spacing={1}>\n                <Grid item xs={1}>\n                    <Paper className={classes.paper}>\n                        <Typography variant=\"h4\" className={classes.title}>\n                            Form\n                        </Typography>\n                    </Paper>\n                </Grid>\n                \n                <Grid item xs>\n                    <Paper className={classes.paper}>\n                        <TextField \n                            label=\"Agent\" select\n                            onChange={(event) => this.setState({ agent: event.target.value })}\n                        >\n                            {'User Charity'.split(' ').map(x => (\n                                <MenuItem value={x}>{x}</MenuItem>\n                            ))}\n                        </TextField>\n                    </Paper>\n                </Grid>\n                \n                <Grid item xs>\n                    <Paper className={classes.paper}>\n                        <TextField \n                            label=\"Continent\" select\n                            onChange={(event) => this.setState({ continent: event.target.value })}\n                        >\n                            {continents.map((x, i) => (\n                                <MenuItem value={i}>{x}</MenuItem>\n                            ))}\n                        </TextField>\n                    </Paper>\n                </Grid>\n                \n                <Grid item xs>\n                    <Paper className={classes.paper}>\n                        <TextField \n                            label=\"Amount\" type='number'\n                            onChange={(event) => this.setState({ value: event.target.value })}\n                        />\n                    </Paper>\n                </Grid>\n            \n                <Grid item xs>\n                    <Paper className={classes.paper}>\n                        <TextField \n                            label=\"Memo (only stored for Charity)\"\n                            onChange={(event) => this.setState({ memo: event.target.value })}\n                        />\n                    </Paper>\n                </Grid>\n\n                <Grid item xs={1}>\n                    <div className={classes.paper}>\n                        <Button \n                            variant=\"contained\" color=\"primary\"\n                            onClick={this.send}\n                        >\n                            Submit\n                        </Button>\n                    </div>\n                </Grid>\n            \n            </Grid>        \n        );\n    }\n}\n\nexport default withStyles(useStyles)(Form);\n","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport MailIcon from '@material-ui/icons/Mail';\n\nconst useStyles = makeStyles({\n  list: {\n    width: 250,\n  },\n  fullList: {\n    width: 'auto',\n  },\n});\nconst continents = ['Asia', 'Africa', 'NorthAmerica', 'SouthAmerica', 'Antarctica', 'Europe', 'Australia']\n\nexport default function TemporaryDrawer(props) {\n  const classes = useStyles();\n  const [state, setState] = React.useState({\n    top: false,\n    left: false,\n    bottom: false,\n    right: false,\n  });\n\n  const toggleDrawer = (anchor, open) => (event) => {\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n      return;\n    }\n\n    setState({ ...state, [anchor]: open });\n  };\n\n  const list = (anchor) => (\n    <div\n      className={clsx(classes.list, {\n        [classes.fullList]: anchor === 'top' || anchor === 'bottom',\n      })}\n      role=\"presentation\"\n      onClick={toggleDrawer(anchor, false)}\n      onKeyDown={toggleDrawer(anchor, false)}\n    >\n      <List>\n        {continents.map(cont => (\n          <ListItem>\n            <ListItemText primary={cont + ': ' + props.bals[cont]} />\n          </ListItem>\n        ))}\n      </List>\n    </div>\n  );\n\n  return (\n    <div>\n      <Button onClick={toggleDrawer('right', true)}>Balances</Button>\n      {['left', 'right', 'top', 'bottom'].map((anchor) => (\n        <React.Fragment key={anchor}>\n          <Drawer anchor={anchor} open={state[anchor]} onClose={toggleDrawer(anchor, false)}>\n            {list(anchor)}\n          </Drawer>\n        </React.Fragment>\n      ))}\n    </div>\n  );\n}\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Typography, Tooltip, IconButton } from '@material-ui/core';\nimport { GitHub } from '@material-ui/icons';\nimport { DataGrid } from '@material-ui/data-grid';\n\nimport Web3 from 'web3';\nimport hex2ascii from 'hex2ascii';\n\nimport contract from './contract';\nimport env from '../env';\nimport Dgrid from './Dgrid';\nimport Form from './Form';\nimport TempDrawer from './TempDrawer';\n\nconst url = 'https://sandbox.truffleteams.com/' + env.truffle;\nconst web3 = new Web3(url);\n\nconst user = \"0x61eB15d8A761Fc80387F50d84Fbf7Ff47a97d92F\";\nconst charity = \"0x596Aa50158BFf76F8D08F848d701C83a4F754d9c\";\nconst store = \"0xAf951AE00Ab357b8a2cFa66901E0D4D0F96e397B\";\n\nconst myContract = new web3.eth.Contract(contract.abi, contract.address);\n\nconst continents = ['Asia', 'Africa', 'NorthAmerica', 'SouthAmerica', 'Antarctica', 'Europe', 'Australia']\n\nclass Map extends React.Component {\n    constructor () {\n        super();\n        this.state = {\n            rows: [],\n            bals: {},\n        };\n        this.getEvents = this.getEvents.bind(this);\n    }\n\n    getEvents(error, data) {\n        const rows = data.map(row => row.returnValues);\n        rows.forEach( (row, id) => {\n            row['id'] = id;\n            row.TimestampEST = hex2ascii(row.TimestampEST);\n            row.Memo = hex2ascii(row.Memo);\n            row.Value = Number(row.Value);\n            row.Continent = continents[row.Continent];\n        })\n        this.setState({ rows });\n        console.log(rows);\n    }\n\n    load() {\n        myContract.getPastEvents('trans', {\n            fromBlock: 0,\n            toBlock: 'latest',\n        }, this.getEvents);\n    }\n\n    componentDidMount() {\n        // get events\n        this.load();\n\n        // get balances\n        continents.map( (cont, i) => {\n            myContract.methods.bals(i)\n                .call( (error, result) => this.state.bals[cont] = result);\n        });\n    }\n\n    render () {\n        return (\n            <div>\n                <Form web3={web3} myContract={myContract} />\n                <TempDrawer bals={this.state.bals} />\n                <Dgrid rows={this.state.rows} />\n            </div>\n        );\n    }\n}\n\nexport default Map;\n","import * as React from 'react';\nimport { DataGrid } from '@material-ui/data-grid';\nimport { Tooltip, Typography } from '@material-ui/core';\n\nimport axios from 'axios';\n\nconst fields = 'id Hall Meal Time Foods'.split(' ');\nconst columns = [\n    {\n        field: 'Foods',\n        renderCell: params => <Tooltip\n            placement='right'\n            title={\n                <Typography variant='h6'>\n                    {params.value}\n                </Typography>\n            }\n        >\n            <div>{params.value}</div>\n        </Tooltip>\n    },\n    { field: 'Hall' },\n    { field: 'Meal' },\n    { field: 'Time' },\n];\n\nclass Map extends React.Component {\n    constructor () {\n        super();\n        this.state = { rows: [] };\n    }\n\n    componentDidMount() {\n        axios.get('https://raw.githubusercontent.com/GeorgeFane/MDining-Scraper/master/scraped.txt')\n            .then(resp => {\n                const rows = resp.data.map( (row, id) => {\n                    row.id = id;\n                    row.Foods = row.Foods.map(food => food.trim())\n                        .join(', ');\n                    return row;\n                });\n                this.setState({ rows });\n            });\n    }\n\n    render () {\n        const { rows } = this.state;\n        return rows.length ? <DataGrid\n            rows={rows}\n            columns={columns}\n            autoHeight\n        /> : <span>Loading rows...</span>;\n    }\n}\n\nexport default Map;\n","import * as React from 'react';\nimport { DataGrid } from '@material-ui/data-grid';\nimport { Tooltip, Typography } from '@material-ui/core';\n\nimport axios from 'axios';\n\nconst currencyFormatter = new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD',\n});\n\nconst usdPrice = {\n    type: 'number',\n    valueFormatter: ({ value }) => currencyFormatter.format(Number(value)),\n    cellClassName: 'font-tabular-nums',\n};\n\nconst pct = {\n    type: 'number',\n    valueFormatter: (params) => {\n        const valueFormatted = Number(params.value * 100).toLocaleString();\n        return `${valueFormatted} %`;\n    },\n}\n\nconst sample = {\n    \"name\":\"Bitcoin\",\n    \"price\":33010.0697484057,\n    \"volume_24h\":28915872345.6352500916,\n    \"percent_change_1h\":0.0157456,\n    \"percent_change_24h\":-0.77388887,\n    \"percent_change_7d\":-0.05832909,\n    \"percent_change_30d\":1.01173964,\n    \"percent_change_60d\":-44.28185933,\n    \"percent_change_90d\":-45.67767242,\n    \"market_cap\":618988719008.0666503906,\n    \"last_updated\":\"2021-07-09T04:29:02.000Z\"\n};\n\nconst fields = 'id Hall Meal Time Foods'.split(' ');\nconst columns = [\n    { field: 'name' },\n    { field: 'last_updated' },\n    { field: 'price', ...usdPrice },\n    { field: 'market_cap', ...usdPrice },\n    { field: 'volume_24h', type: 'number' },\n    { field: 'percent_change_1h', ...pct },\n    { field: 'percent_change_24h', ...pct },\n    { field: 'percent_change_7d', ...pct },\n    { field: 'percent_change_30d', ...pct },\n    { field: 'percent_change_60d', ...pct },\n    { field: 'percent_change_90d', ...pct },\n];\n\nclass Map extends React.Component {\n    constructor () {\n        super();\n        this.state = { rows: [] };\n    }\n\n    componentDidMount() {\n        axios.get('https://raw.githubusercontent.com/GeorgeFane/cmc-api/main/today.json')\n            .then(resp => {\n                var rows = resp.data;\n                rows.forEach( (row, id) => row.id = id);\n                this.setState({ rows });\n            });\n    }\n\n    render () {\n        const { rows } = this.state;\n        return rows.length ? (\n            <DataGrid\n                rows={rows}\n                columns={columns}\n                autoHeight\n            />\n        ) : (\n            <span>Loading rows...</span>\n        );\n    }\n}\n\nexport default Map;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tab from '@material-ui/core/Tab';\nimport TabContext from '@material-ui/lab/TabContext';\nimport TabList from '@material-ui/lab/TabList';\nimport TabPanel from '@material-ui/lab/TabPanel';\nimport { TextField, Box, Grid, Tooltip, IconButton, Typography, InputBase } from '@material-ui/core';\nimport { GitHub } from '@material-ui/icons';\n\nimport Mdining from './Mdining';\nimport CryptoQuotes from './CryptoQuotes';\nconst tabs = [\n    {\n        label: 'Mdining', content: <Mdining />, repo: 'MDining-Scraper',\n        sub: \"Michigan's dining hall menus are split by hall and are not displayed concisely. Here's a better option that I actually used daily during first semester.\"\n    },\n    {\n        label: 'CryptoQuotes', content: <CryptoQuotes />, repo: 'cmc-api',\n        sub: \"My dad is really into crypto trading. He showed me CoinMarketCap.com, where he gets quotes, and I disliked that it is very slow and loads only 100 quotes at a time. I offered to build him a tool.\"\n    },\n];\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n        backgroundColor: theme.palette.background.paper,\n    },\n}));\n\nfunction LabTabs() {\n    const classes = useStyles();\n    const [value, setValue] = React.useState(0);\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    };\n\n    return (\n        <div className={classes.root}>\n            <TabContext value={value}>\n                <TabList onChange={handleChange}>\n                    {tabs.map( (tab, value) => <Tab \n                        label={tab.label} value={value} \n                    />)}\n                </TabList>\n                \n                {tabs.map( (tab, value) => <div>\n                    <TabPanel value={value}>\n                        <Typography>\n                            <IconButton\n                                color='inherit'\n                                href={\"https://github.com/GeorgeFane/\" + tab.repo}\n                                target='_blank'                            \n                            >\n                                <GitHub fontSize='large' />\n                            </IconButton>\n\n                            {tab.sub}\n                        </Typography>\n                        {tab.content}\n                    </TabPanel>\n                </div>\n                )}\n            </TabContext>\n        </div>\n    );\n}\n\nexport default LabTabs;","import React from 'react';\nimport clsx from 'clsx';\nimport { createMuiTheme, makeStyles, useTheme, withStyles } from '@material-ui/core/styles';\nimport { Drawer, AppBar, Toolbar, List, CssBaseline, Typography, Divider, IconButton, ListItem, ListItemIcon, ListItemText, Paper, ThemeProvider, Tooltip, Button } from '@material-ui/core';\nimport { Menu, ChevronLeft, Brightness3, Brightness7, LiveTv, AccountBalance, TableChart, GitHub, LinkedIn, Create, Home } from '@material-ui/icons';\nimport { DataGrid } from '@material-ui/data-grid';\n\nimport Me from './Me';\nimport RatingsMap from './RatingsMap/RatingsMap';\nimport CrypChar from './CrypChar/CrypChar';\nimport DataViz from './DataViz/DataViz';\n\nconst tabs = [\n    {\n        icon: <Home />, label: 'Me', content: <Me />\n    },\n    {\n        icon: <TableChart />, label: 'DataViz', content: <DataViz />,\n        sub: \"There is some information that is both important to me and not presented well. I retrieved this data myself, through web scraping and API calls.\"\n    },\n    {\n        icon: <AccountBalance />, label: 'CrypChar', content: <CrypChar />,\n        sub: \"This is an MVP that uses blockchain to make charity operations more accountable. Made for Blockchain@Michigan's summer cohort project, this uses web3.js to call a Solidity smart contract.\"\n    },\n    {\n        icon: <LiveTv />, label: 'RatingsMap', content: <RatingsMap />,\n        sub: \"I saw a great visual of Better Call Saul's ratings, with a color-coded cell for every episode of every season. There wasn't a single episode that wasn't green. Now you can see that for any show.\"\n    },\n];\n\nconst drawerWidth = 240;\nconst useStyles = theme => ({\n    root: {\n        flexGrow: 1,\n        display: 'flex',\n        height: '100%',\n        backgroundColor: theme.palette.background.default,\n    },\n    appBar: {\n        zIndex: theme.zIndex.drawer + 1,\n        transition: theme.transitions.create(['width', 'margin'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n    },\n    appBarShift: {\n        marginLeft: drawerWidth,\n        width: `calc(100% - ${drawerWidth}px)`,\n        transition: theme.transitions.create(['width', 'margin'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    menuButton: {\n        marginRight: 36,\n    },\n    hide: {\n        display: 'none',\n    },\n    drawer: {\n        width: drawerWidth,\n        flexShrink: 0,\n        whiteSpace: 'nowrap',\n    },\n    drawerOpen: {\n        width: drawerWidth,\n        transition: theme.transitions.create('width', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    drawerClose: {\n        transition: theme.transitions.create('width', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        overflowX: 'hidden',\n        width: theme.spacing(7) + 1,\n        [theme.breakpoints.up('sm')]: {\n            width: theme.spacing(9) + 1,\n        },\n    },\n    toolbar: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'flex-end',\n        padding: theme.spacing(0, 1),\n        // necessary for content to be below app bar\n        ...theme.mixins.toolbar,\n    },\n    content: {\n        flexGrow: 1,\n        padding: theme.spacing(3),\n    },\n    title: {\n        flexGrow: 1,\n    },\n});\nexport const light = {\n    palette: {\n        type: \"light\"\n    }\n};\nexport const dark = {\n    palette: {\n        type: \"dark\"\n    }\n};\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            open: true,\n            value: 0,\n            theme: false,\n        }\n    }\n\n    setOpen = open => this.setState({ open });\n    setValue = value => this.setState({ value });\n    handleDrawerOpen = () => this.setState({ open: true });\n    handleDrawerClose = () => this.setState({ open: false });\n    switchTheme = () => this.setState({ theme: !this.state.theme });\n\n    Top(){\n        const { classes } = this.props;\n        return (\n            <AppBar\n                position=\"fixed\"\n                className={clsx(classes.appBar, {\n                    [classes.appBarShift]: this.state.open,\n                })}\n            >\n                <Toolbar>\n                    <IconButton\n                        color=\"inherit\"\n                        aria-label=\"open drawer\"\n                        onClick={this.handleDrawerOpen}\n                        edge=\"start\"\n                        className={clsx(classes.menuButton, {\n                            [classes.hide]: this.state.open,\n                        })}\n                    >\n                        <Menu />\n                    </IconButton>\n                    \n                    <Typography variant=\"h4\" className={classes.title}>\n                        George Fane\n                    </Typography>\n\n                    <IconButton \n                        color='inherit'\n                        onClick={this.switchTheme}\n                    >\n                        {this.state.theme ? <Brightness3 /> : <Brightness7 />}\n                    </IconButton>\n\n                </Toolbar>\n            </AppBar>\n        );\n    }\n\n    Side() {\n        const { classes } = this.props;\n        return (\n            <Drawer\n                variant=\"permanent\"\n                className={clsx(classes.drawer, {\n                    [classes.drawerOpen]: this.state.open,\n                    [classes.drawerClose]: !this.state.open,\n                })}\n                classes={{\n                    paper: clsx({\n                        [classes.drawerOpen]: this.state.open,\n                        [classes.drawerClose]: !this.state.open,\n                    }),\n                }}\n            >\n                <div className={classes.toolbar}>\n                    <IconButton onClick={this.handleDrawerClose}>\n                        <ChevronLeft />                    \n                    </IconButton>\n                </div>\n                <Divider />\n    \n                <List>    \n                    {tabs.map((row, index) => (\n                        <ListItem \n                            button \n                            onClick={() => this.setValue(index)}\n                        >\n                            <ListItemIcon style={{ color: row.color }}>\n                                { row.icon }\n                            </ ListItemIcon>\n                            <ListItemText style={{ color: row.color }} primary={row.label} />\n                        </ListItem>\n                    ))}\n                </List>\n            </Drawer>\n        );\n    }\n\n    Bottom() {\n        const { classes } = this.props;\n        //return tabs[this.state.value].content\n        return (\n            <Paper className={classes.content}>\n                <div className={classes.toolbar} />\n\n                <Typography variant='h2'>\n                    {tabs[this.state.value].label}\n\n                    <IconButton\n                        color='inherit'\n                        href={\"https://github.com/GeorgeFane/GeorgeFane.github.io/tree/master/src/\" + tabs[this.state.value].label}\n                        target='_blank'                            \n                    >\n                        <GitHub fontSize='large' />\n                    </IconButton>\n                </Typography>\n\n                <Typography>\n                    {tabs[this.state.value].sub}\n                </Typography>\n\n                {tabs[this.state.value].content}\n            </Paper>\n        );\n    }\n    \n    DataGridDemo(rows) {\n        if (!rows.length){\n            return (\n                <div>\n                    No Rows\n                </div>\n            );\n        }\n\n        var columns = [{field: 'id'}].concat(Object.keys(rows[0])\n            .map(key => (\n                {\n                    field: key,\n                    width: 200,\n                }\n            ))\n        );\n        \n        rows.forEach((row, index) => row['id'] = index);\n    \n        const data = {\n            rows: rows,\n            columns: columns,\n            pageSize: 5,\n            autoHeight: true,\n        };\n        \n        return (\n            <div style={{ height: 400, width: '100%' }}>\n                <DataGrid {...data} />\n            </div>\n        );\n    }\n\n    render() {\n        //return <Priority1 />;\n\n        const { classes } = this.props;\n        const appliedTheme = createMuiTheme(this.state.theme ? light : dark);\n\n        return (\n            <ThemeProvider theme={appliedTheme}>\n                <div className={classes.root}>\n                    <CssBaseline />\n                    {this.Top()}\n                    {this.Side()}\n                    {this.Bottom()}\n                </div>\n            </ThemeProvider>\n        );\n    }\n}\n\nexport default withStyles(useStyles)(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport RatingsMap from './RatingsMap/RatingsMap'\n\nReactDOM.render(\n    <App />,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}
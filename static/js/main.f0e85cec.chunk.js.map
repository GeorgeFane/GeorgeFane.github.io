{"version":3,"sources":["RatingsMap/SearchAppBar.js","RatingsMap/ScrollTabs.js","RatingsMap/TestTabs.js","RatingsMap/RatingsMap.js","App.js","index.js"],"names":["makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","display","breakpoints","up","search","position","borderRadius","shape","backgroundColor","fade","palette","common","white","marginLeft","width","searchIcon","padding","height","pointerEvents","alignItems","justifyContent","inputRoot","color","inputInput","paddingLeft","transition","transitions","create","background","paper","colors","split","url","axios","get","params","apikey","s","type","then","x","data","Search","getSeason","imdbID","Season","i","CommentForm","props","state","rows","show","seasons","onChange","bind","onSubmit","this","handleSubmit","TextField","label","variant","required","inputRef","textarea","body","length","Grid","container","justify","filter","tile","Poster","map","item","onClick","handleSelect","src","alt","Title","Box","component","numbers","forEach","season","row","Episodes","episode","Episode","imdbRating","push","Math","max","Object","keys","Number","columns","field","headerName","index","process","classes","className","autoHeight","getCellClassName","value","isNaN","entries","Form","ImageGridList","RatingsMap","event","preventDefault","setState","console","log","target","getShow","totalSeasons","requests","all","spread","responses","response","getAll","React","Component","withStyles","drawerWidth","light","dark","tabs","icon","LiveTv","content","App","setOpen","open","setValue","handleDrawerOpen","handleDrawerClose","switchTheme","AppBar","clsx","appBar","appBarShift","Toolbar","IconButton","edge","hide","Menu","Typography","Date","toLocaleTimeString","Brightness3","Brightness7","Drawer","drawer","drawerOpen","drawerClose","toolbar","ChevronLeft","Divider","List","ListItem","button","ListItemIcon","style","ListItemText","primary","Paper","concat","key","pageSize","appliedTheme","createMuiTheme","ThemeProvider","CssBaseline","Top","Side","Bottom","zIndex","easing","sharp","duration","leavingScreen","enteringScreen","flexShrink","whiteSpace","overflowX","mixins","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f0e85cec.chunk.js","sourcesContent":["import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport InputBase from '@material-ui/core/InputBase';\nimport { fade, makeStyles } from '@material-ui/core/styles';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport SearchIcon from '@material-ui/icons/Search';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    title: {\n        display: 'none',\n        [theme.breakpoints.up('sm')]: {\n            display: 'block',\n        },\n    },\n    search: {\n        position: 'relative',\n        borderRadius: theme.shape.borderRadius,\n        backgroundColor: fade(theme.palette.common.white, 0.15),\n        '&:hover': {\n            backgroundColor: fade(theme.palette.common.white, 0.25),\n        },\n        marginLeft: 0,\n        width: '100%',\n        [theme.breakpoints.up('sm')]: {\n            marginLeft: theme.spacing(9),\n            width: 'auto',\n        },\n    },\n    searchIcon: {\n        padding: theme.spacing(0, 2),\n        height: '100%',\n        position: 'absolute',\n        pointerEvents: 'none',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    inputRoot: {\n        color: 'inherit',\n    },\n    inputInput: {\n        padding: theme.spacing(1, 1, 1, 0),\n        // vertical padding + font size from searchIcon\n        paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n        transition: theme.transitions.create('width'),\n        width: '100%',\n        [theme.breakpoints.up('sm')]: {\n            width: '12ch',\n            '&:focus': {\n                width: '20ch',\n            },\n        },\n    },\n}));\n\nexport default function SearchAppBar(props) {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <AppBar position=\"static\">\n                <Toolbar>\n                    <IconButton\n                        edge=\"start\"\n                        className={classes.menuButton}\n                        color=\"inherit\"\n                        aria-label=\"open drawer\"\n                    >\n                        <MenuIcon />\n                    </IconButton>\n                    <Typography className={classes.title} variant=\"h6\" noWrap>\n                        RatingsMap\n                    </Typography>\n                    <div className={classes.search}>\n                        <div className={classes.searchIcon}>\n                            <SearchIcon />\n                        </div>\n                        <InputBase\n                            placeholder=\"Search\"\n                            classes={{\n                                root: classes.inputRoot,\n                                input: classes.inputInput,\n                            }}\n                            inputProps={{ 'aria-label': 'search' }}\n                            onChange={props.onChange}\n                        />\n                    </div>\n                </Toolbar>\n            </AppBar>\n        </div>\n    );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport Paper from '@material-ui/core/Paper';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        backgroundColor: theme.palette.background.paper,\n    },\n}));\n\nexport default function ScrollableTabsButtonAuto(props) {\n    const classes = useStyles();\n    const [value, setValue] = React.useState(0);\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    };\n        \n    var entries = Object.entries(props.show);\n    if (!entries.length){\n        return <div></div>;\n    }\n\n    entries.splice(14, 1);\n    return (\n        <Paper className={classes.root}>\n            <AppBar position=\"static\" color=\"default\">\n                <Tabs\n                    value={value}\n                    onChange={handleChange}\n                    indicatorColor=\"primary\"\n                    textColor=\"primary\"\n                    variant=\"scrollable\"\n                    scrollButtons=\"auto\"\n                    aria-label=\"scrollable auto tabs example\"\n                >\n                    {entries.map( ([key, value]) => (\n                        <Tab label={key} />\n                    ))}\n                </Tabs>\n            </AppBar>\n            \n            <Box p={3}>\n                <Typography>{entries[value][1]}</Typography>\n            </Box>\n            \n        </Paper>\n    );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport PhoneIcon from '@material-ui/icons/Phone';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport PersonPinIcon from '@material-ui/icons/PersonPin';\nimport HelpIcon from '@material-ui/icons/Help';\nimport ShoppingBasket from '@material-ui/icons/ShoppingBasket';\nimport ThumbDown from '@material-ui/icons/ThumbDown';\nimport ThumbUp from '@material-ui/icons/ThumbUp';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`scrollable-force-tabpanel-${index}`}\n      aria-labelledby={`scrollable-force-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box p={3}>\n          <Typography>{children}</Typography>\n        </Box>\n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `scrollable-force-tab-${index}`,\n    'aria-controls': `scrollable-force-tabpanel-${index}`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    width: '100%',\n    backgroundColor: theme.palette.background.paper,\n  },\n}));\n\nexport default function ScrollableTabsButtonForce() {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\" color=\"default\">\n        <Tabs\n          value={value}\n          onChange={handleChange}\n          variant=\"fullWidth\"\n          scrollButtons=\"on\"\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n          aria-label=\"scrollable force tabs example\"\n        >\n          <Tab label=\"Item One\" icon={<PhoneIcon />} {...a11yProps(0)} />\n          <Tab label=\"Item Two\" icon={<FavoriteIcon />} {...a11yProps(1)} />\n          <Tab label=\"Item Three\" icon={<PersonPinIcon />} {...a11yProps(2)} />\n          <Tab label=\"Item Four\" icon={<HelpIcon />} {...a11yProps(3)} />\n          <Tab label=\"Item Five\" icon={<ShoppingBasket />} {...a11yProps(4)} />\n          <Tab label=\"Item Six\" icon={<ThumbDown />} {...a11yProps(5)} />\n          <Tab label=\"Item Seven\" icon={<ThumbUp />} {...a11yProps(6)} />\n        </Tabs>\n      </AppBar>\n      <TabPanel value={value} index={0}>\n        Item One\n      </TabPanel>\n      <TabPanel value={value} index={1}>\n        Item Two\n      </TabPanel>\n      <TabPanel value={value} index={2}>\n        Item Three\n      </TabPanel>\n      <TabPanel value={value} index={3}>\n        Item Four\n      </TabPanel>\n      <TabPanel value={value} index={4}>\n        Item Five\n      </TabPanel>\n      <TabPanel value={value} index={5}>\n        Item Six\n      </TabPanel>\n      <TabPanel value={value} index={6}>\n        Item Seven\n      </TabPanel>\n    </div>\n  );\n}\n","import React from \"react\";\nimport axios from \"axios\";\n\nimport { TextField, Box, Grid, ThemeProvider, CssBaseline, Typography, InputBase } from '@material-ui/core';\nimport { DataGrid } from '@material-ui/data-grid';\nimport { withStyles, createMuiTheme } from '@material-ui/core/styles';\n\nimport SearchAppBar from './SearchAppBar';\nimport ScrollTabs from './ScrollTabs';\nimport TestTabs from './TestTabs';\n\nvar colors = 'darkGreen green goldenRod darkGoldenRod indianRed fireBrick'.split(' ');\nconst useStyles = theme => {\n    var root = { padding: theme.spacing(3) };\n    colors.forEach(color => {\n        root['& .' + color] = { backgroundColor: color };\n    })\n    console.log(root)\n    return { root: root };\n};\n\n// api functions\nconst url = 'https://www.omdbapi.com/';\n\nfunction search(title) {\n    return axios.get(url, {\n        params: {\n            apikey: '14f8eef1',\n            s: title,\n            type: 'series',\n        }\n    })\n        .then(x => x.data.Search || []);\n}\n\nfunction getShow(imdbID) {\n    return axios.get(url, {\n        params: {\n            apikey: '14f8eef1',\n            i: imdbID,\n        }\n    })\n        .then(x => x.data || []);\n}\n\nfunction getSeason(imdbID, Season) {\n    return axios.get(url, {\n        params: {\n            apikey: '14f8eef1',\n            i: imdbID,\n            Season: Season,\n        }\n    });\n}\n\nfunction getAll(imdbID, totalSeasons) {\n    var requests = [];\n    for (var i = 0; i < totalSeasons; i++){\n        requests.push(\n            getSeason(imdbID, i + 1)\n        );\n    }\n    return axios.all(requests)\n        .then(axios.spread( (...responses) => (\n            responses.map(response => response.data) \n        )));\n}\n\nclass CommentForm extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            rows: [],\n            show: {},\n            seasons: [],\n        }\n\n        this.onChange = this.onChange.bind(this);\n    }\n\n    // components\n\n    Form() {\n        return (\n            <form onSubmit={this.handleSubmit.bind(this)}>\n                <TextField \n                    label=\"RatingsMap\"\n                    variant='filled'\n                    required\n                    inputRef={(textarea) => this.body = textarea}\n                />\n            </form>\n        );\n    }\n\n    ImageGridList() {\n        if (this.state.rows.length) {\n            return (\n                <Grid container justify='left' spacing={2}>\n                    {this.state.rows\n                        .filter(tile => tile.Poster !== 'N/A')\n                        .map((tile) => (\n                            <Grid item onClick={() => this.handleSelect(tile.imdbID)}>\n                                <img src={tile.Poster} alt={tile.Title} width={144} />\n                            </Grid>\n                        )\n                    )}\n                </Grid>\n            );\n        }\n        \n        <Box component=\"div\" display=\"inline\">inline</Box>\n        return this.state.rows\n            .map((tile) => (\n                <Box component=\"div\" display=\"inline\">\n                    <img src={tile.Poster} alt={tile.Title} width={99} />\n                </Box>\n            ));\n    }\n    \n    process() {\n        var seasons = this.state.seasons;\n        if (!seasons.length){\n            return false;\n        }\n    \n        var rows = []\n        var numbers = [];\n        seasons.forEach(season => {\n            var row = {};\n            const episodes = season.Episodes || [];\n            episodes.forEach(episode => {\n                row[episode.Episode] = episode.imdbRating\n            });\n            rows.push(row);\n    \n            numbers.push(\n                Math.max( ...Object.keys(row).map(Number) )\n            );\n        })\n        \n        var max = Math.max( ...numbers );\n        var columns = [{ \n            field: 'id',\n            headerName: 'Season',\n        }]\n        for (var i = 1; i < max + 1; i++){\n            columns.push({\n                field: i,\n                headerName: 'E' + i,\n            });\n        }\n        \n        rows.forEach((row, index) => row['id'] = index + 1);\n    \n        return {\n            rows: rows,\n            columns: columns,\n        };\n    }\n\n    RatingsMap() {\n        const data = this.process();\n        if (!data){\n            return <div></div>;\n        }\n        \n        const { classes } = this.props;\n        return (\n            <Box className={classes.root}>\n                <DataGrid \n                    {...data}\n                    autoHeight\n                    getCellClassName={(params) => {\n                        if (params.field === 'id' || !params.value || isNaN(params.value)) {\n                            return '';\n                        }\n                        for (const [index, color] of colors.entries()) {\n                            if (Number(params.value) >= (9 - index)) {\n                                return color;\n                            }\n                        }\n                        return colors[colors.length - 1];\n                    }}\n                />\n            </Box>\n        );\n    }\n\n    render() {\n        return (\n            <div>\n                {this.Form()}\n                <br />\n\n                {this.ImageGridList()}\n                <br />\n\n                {this.RatingsMap()}\n            </div>\n        );\n    }\n    \n    // hooks\n\n    handleSubmit(event) { \n        event.preventDefault();     // prevents page from reloading on submit\n        search(this.body.value)\n            .then(x => {\n                this.setState({ rows: x });\n            });\n    }\n\n    onChange(event) { \n        event.preventDefault();     // prevents page from reloading on submit\n        console.log(event.target.value);\n        search(event.target.value)\n            .then(x => {\n                this.setState({ rows: x });\n            });\n    }\n    \n    handleSelect(imdbID) {\n        getShow(imdbID)\n            .then(x => {\n                this.setState({ show: x });\n\n                getAll(\n                    this.state.show.imdbID,\n                    Number(this.state.show.totalSeasons),\n                )\n                    .then(x => {\n                        this.setState({ seasons: x });\n                    });\n            });        \n    }\n} // end CommentForm component\n\nexport default withStyles(useStyles)(CommentForm);","import React from 'react';\nimport clsx from 'clsx';\nimport { createMuiTheme, makeStyles, useTheme, withStyles } from '@material-ui/core/styles';\nimport { Drawer, AppBar, Toolbar, List, CssBaseline, Typography, Divider, IconButton, ListItem, ListItemIcon, ListItemText, Paper, ThemeProvider } from '@material-ui/core';\nimport { Menu, ChevronLeft, Brightness3, Brightness7, Create, DiscFull, Backup, Storage, PriorityHigh, LiveTv } from '@material-ui/icons';\nimport { DataGrid } from '@material-ui/data-grid';\n\nimport RatingsMap from './RatingsMap/RatingsMap'\nimport TestTabs from './RatingsMap/TestTabs';\n\nconst drawerWidth = 240;\nconst useStyles = theme => ({\n    root: {\n        flexGrow: 1,\n        backgroundColor: theme.palette.background.paper,\n        display: 'flex',\n        height: '100%',\n    },\n    appBar: {\n        zIndex: theme.zIndex.drawer + 1,\n        transition: theme.transitions.create(['width', 'margin'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n    },\n    appBarShift: {\n        marginLeft: drawerWidth,\n        width: `calc(100% - ${drawerWidth}px)`,\n        transition: theme.transitions.create(['width', 'margin'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    menuButton: {\n        marginRight: 36,\n    },\n    hide: {\n        display: 'none',\n    },\n    drawer: {\n        width: drawerWidth,\n        flexShrink: 0,\n        whiteSpace: 'nowrap',\n    },\n    drawerOpen: {\n        width: drawerWidth,\n        transition: theme.transitions.create('width', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    drawerClose: {\n        transition: theme.transitions.create('width', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        overflowX: 'hidden',\n        width: theme.spacing(7) + 1,\n        [theme.breakpoints.up('sm')]: {\n            width: theme.spacing(9) + 1,\n        },\n    },\n    toolbar: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'flex-end',\n        padding: theme.spacing(0, 1),\n        // necessary for content to be below app bar\n        ...theme.mixins.toolbar,\n    },\n    content: {\n        flexGrow: 1,\n        padding: theme.spacing(3),\n    },\n    title: {\n        flexGrow: 1,\n    },\n});\nexport const light = {\n    palette: {\n        type: \"light\"\n    }\n};\nexport const dark = {\n    palette: {\n        type: \"dark\"\n    }\n};\n\nconst tabs = [\n    { icon: <LiveTv />, label: 'RatingsMap', content: <RatingsMap /> },\n];\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            open: true,\n            value: 0,\n            theme: false,\n        }\n    }\n\n    setOpen = open => this.setState({ open });\n    setValue = value => this.setState({ value });\n    handleDrawerOpen = () => this.setState({ open: true });\n    handleDrawerClose = () => this.setState({ open: false });\n    switchTheme = () => this.setState({ theme: !this.state.theme });\n\n    Top(){\n        const { classes } = this.props;\n        return (\n            <AppBar\n                position=\"fixed\"\n                className={clsx(classes.appBar, {\n                    [classes.appBarShift]: this.state.open,\n                })}\n            >\n                <Toolbar>\n                    <IconButton\n                        color=\"inherit\"\n                        aria-label=\"open drawer\"\n                        onClick={this.handleDrawerOpen}\n                        edge=\"start\"\n                        className={clsx(classes.menuButton, {\n                            [classes.hide]: this.state.open,\n                        })}\n                    >\n                        <Menu />\n                    </IconButton>\n                    \n                    <Typography variant=\"h4\" className={classes.title}>\n                        George Fane\n                    </Typography>\n    \n                    <Typography variant=\"h6\" className={classes.title}>\n                        Time: {new Date().toLocaleTimeString()}\n                    </Typography>\n    \n                    <IconButton\n                        edge=\"end\"\n                        color=\"inherit\"\n                        aria-label=\"mode\"\n                        onClick={this.switchTheme}\n                    >\n                        {this.state.theme ? <Brightness3 /> : <Brightness7 />}\n                    </IconButton>\n                </Toolbar>\n            </AppBar>\n        );\n    }\n\n    Side() {\n        const { classes } = this.props;\n        return (\n            <Drawer\n                variant=\"permanent\"\n                className={clsx(classes.drawer, {\n                    [classes.drawerOpen]: this.state.open,\n                    [classes.drawerClose]: !this.state.open,\n                })}\n                classes={{\n                    paper: clsx({\n                        [classes.drawerOpen]: this.state.open,\n                        [classes.drawerClose]: !this.state.open,\n                    }),\n                }}\n            >\n                <div className={classes.toolbar}>\n                    <IconButton onClick={this.handleDrawerClose}>\n                        <ChevronLeft />                    \n                    </IconButton>\n                </div>\n                <Divider />\n    \n                <List>    \n                    {tabs.map((row, index) => (\n                        <ListItem \n                            button \n                            onClick={() => this.setValue(index)}\n                        >\n                            <ListItemIcon style={{ color: row.color }}>\n                                { row.icon }\n                            </ ListItemIcon>\n                            <ListItemText style={{ color: row.color }} primary={row.label} />\n                        </ListItem>\n                    ))}\n                </List>\n            </Drawer>\n        );\n    }\n\n    Bottom() {\n        const { classes } = this.props;\n        //return tabs[this.state.value].content\n        return (\n            <Paper className={classes.content}>\n                <div className={classes.toolbar} />\n\n                {tabs[this.state.value].content}\n            </Paper>\n        );\n    }\n    \n    DataGridDemo(rows) {\n        if (!rows.length){\n            return (\n                <div>\n                    No Rows\n                </div>\n            );\n        }\n\n        var columns = [{field: 'id'}].concat(Object.keys(rows[0])\n            .map(key => (\n                {\n                    field: key,\n                    width: 200,\n                }\n            ))\n        );\n        \n        rows.forEach((row, index) => row['id'] = index);\n    \n        const data = {\n            rows: rows,\n            columns: columns,\n            pageSize: 5,\n            autoHeight: true,\n        };\n        \n        return (\n            <div style={{ height: 400, width: '100%' }}>\n                <DataGrid {...data} />\n            </div>\n        );\n    }\n\n    render() {\n        //return <Priority1 />;\n\n        const { classes } = this.props;\n        const appliedTheme = createMuiTheme(this.state.theme ? light : dark);\n\n        return (\n            <ThemeProvider theme={appliedTheme}>\n                <div className={classes.root}>\n                    <CssBaseline />\n                    {this.Top()}\n                    {this.Side()}\n                    {this.Bottom()}\n                </div>\n            </ThemeProvider>\n        );\n    }\n}\n\nexport default withStyles(useStyles)(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport RatingsMap from './RatingsMap/RatingsMap'\n\nReactDOM.render(\n    <App />,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}
{"version":3,"sources":["RatingsMap/SearchAppBar.js","RatingsMap/ScrollTabs.js","RatingsMap/RatingsMap.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","display","breakpoints","up","search","position","borderRadius","shape","backgroundColor","fade","palette","common","white","marginLeft","width","searchIcon","padding","height","pointerEvents","alignItems","justifyContent","inputRoot","color","inputInput","paddingLeft","transition","transitions","create","SearchAppBar","props","classes","className","AppBar","Toolbar","IconButton","edge","Typography","variant","noWrap","InputBase","placeholder","input","inputProps","onChange","background","paper","ScrollableTabsButtonAuto","React","useState","value","setValue","entries","Object","show","splice","Tabs","event","newValue","indicatorColor","textColor","scrollButtons","map","key","Tab","label","Box","p","colors","split","dark","type","url","getSeason","imdbID","Season","axios","get","params","apikey","i","CommentForm","state","rows","seasons","bind","this","length","Grid","container","justify","filter","tile","Poster","item","onClick","handleSelect","src","alt","Title","numbers","forEach","season","row","Episodes","episode","Episode","imdbRating","push","Math","max","keys","Number","columns","field","headerName","index","data","process","autoHeight","getCellClassName","isNaN","ThemeProvider","createMuiTheme","CssBaseline","ImageGridList","RatingsMap","preventDefault","console","log","target","s","then","x","Search","setState","getShow","totalSeasons","requests","all","spread","responses","response","getAll","Component","withStyles","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3104fa9c.chunk.js","sourcesContent":["import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport InputBase from '@material-ui/core/InputBase';\nimport { fade, makeStyles } from '@material-ui/core/styles';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport SearchIcon from '@material-ui/icons/Search';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    title: {\n        display: 'none',\n        [theme.breakpoints.up('sm')]: {\n            display: 'block',\n        },\n    },\n    search: {\n        position: 'relative',\n        borderRadius: theme.shape.borderRadius,\n        backgroundColor: fade(theme.palette.common.white, 0.15),\n        '&:hover': {\n            backgroundColor: fade(theme.palette.common.white, 0.25),\n        },\n        marginLeft: 0,\n        width: '100%',\n        [theme.breakpoints.up('sm')]: {\n            marginLeft: theme.spacing(1),\n            width: 'auto',\n        },\n    },\n    searchIcon: {\n        padding: theme.spacing(0, 2),\n        height: '100%',\n        position: 'absolute',\n        pointerEvents: 'none',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    inputRoot: {\n        color: 'inherit',\n    },\n    inputInput: {\n        padding: theme.spacing(1, 1, 1, 0),\n        // vertical padding + font size from searchIcon\n        paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n        transition: theme.transitions.create('width'),\n        width: '100%',\n        [theme.breakpoints.up('sm')]: {\n            width: '12ch',\n            '&:focus': {\n                width: '20ch',\n            },\n        },\n    },\n}));\n\nexport default function SearchAppBar(props) {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <AppBar position=\"static\">\n                <Toolbar>\n                    <IconButton\n                        edge=\"start\"\n                        className={classes.menuButton}\n                        color=\"inherit\"\n                        aria-label=\"open drawer\"\n                    >\n                        <MenuIcon />\n                    </IconButton>\n                    <Typography className={classes.title} variant=\"h6\" noWrap>\n                        RatingsMap\n                    </Typography>\n                    <div className={classes.search}>\n                        <div className={classes.searchIcon}>\n                            <SearchIcon />\n                        </div>\n                        <InputBase\n                            placeholder=\"Search\"\n                            classes={{\n                                root: classes.inputRoot,\n                                input: classes.inputInput,\n                            }}\n                            inputProps={{ 'aria-label': 'search' }}\n                            onChange={props.onChange}\n                        />\n                    </div>\n                </Toolbar>\n            </AppBar>\n        </div>\n    );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n        width: '100%',\n        backgroundColor: theme.palette.background.paper,\n    },\n}));\n\nexport default function ScrollableTabsButtonAuto(props) {\n    const classes = useStyles();\n    const [value, setValue] = React.useState(0);\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    };\n        \n    var entries = Object.entries(props.show);\n    entries.splice(14, 1);\n\n    return (\n        <div className={classes.root}>\n            <AppBar position=\"static\" color=\"default\">\n                <Tabs\n                    value={value}\n                    onChange={handleChange}\n                    indicatorColor=\"primary\"\n                    textColor=\"primary\"\n                    variant=\"scrollable\"\n                    scrollButtons=\"auto\"\n                    aria-label=\"scrollable auto tabs example\"\n                >\n                    {entries.map( ([key, value]) => (\n                        <Tab label={key} />\n                    ))}\n                </Tabs>\n            </AppBar>\n            \n            <Box p={3}>\n                <Typography>{entries[value][1]}</Typography>\n            </Box>\n            \n        </div>\n    );\n}\n","import React from \"react\";\nimport axios from \"axios\";\n\nimport { TextField, Box, Grid, ThemeProvider, CssBaseline, Typography, InputBase } from '@material-ui/core';\nimport { DataGrid } from '@material-ui/data-grid';\nimport { withStyles, createMuiTheme } from '@material-ui/core/styles';\n\nimport SearchAppBar from './SearchAppBar';\nimport ScrollTabs from './ScrollTabs';\n\nvar colors = 'darkGreen green goldenRod darkGoldenRod indianRed fireBrick'.split(' ');\nconst useStyles = theme => {\n    var root = { padding: theme.spacing(3) };\n    colors.forEach(color => {\n        root['& .' + color] = { backgroundColor: color };\n    })\n    console.log(root)\n    return { root: root };\n};\n\nexport const dark = {\n    palette: {\n        type: \"dark\"\n    }\n};\n\n// api functions\nconst url = 'https://www.omdbapi.com/';\n\nfunction search(title) {\n    return axios.get(url, {\n        params: {\n            apikey: '14f8eef1',\n            s: title,\n            type: 'series',\n        }\n    })\n        .then(x => x.data.Search || []);\n}\n\nfunction getShow(imdbID) {\n    return axios.get(url, {\n        params: {\n            apikey: '14f8eef1',\n            i: imdbID,\n        }\n    })\n        .then(x => x.data || []);\n}\n\nfunction getSeason(imdbID, Season) {\n    return axios.get(url, {\n        params: {\n            apikey: '14f8eef1',\n            i: imdbID,\n            Season: Season,\n        }\n    });\n}\n\nfunction getAll(imdbID, totalSeasons) {\n    var requests = [];\n    for (var i = 0; i < totalSeasons; i++){\n        requests.push(\n            getSeason(imdbID, i + 1)\n        );\n    }\n    return axios.all(requests)\n        .then(axios.spread( (...responses) => (\n            responses.map(response => response.data) \n        )));\n}\n\nclass CommentForm extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            rows: [],\n            show: {},\n            seasons: [],\n        }\n\n        this.onChange = this.onChange.bind(this);\n    }\n\n    // components\n\n    ImageGridList() {\n        if (!this.state.rows.length) {\n            return <div>No Shows</div>\n        }\n        return (\n            <Grid container justify='center' spacing={2}>\n                {this.state.rows\n                    .filter(tile => tile.Poster !== 'N/A')\n                    .map((tile) => (\n                        <Grid item onClick={() => this.handleSelect(tile.imdbID)}>\n                            <img src={tile.Poster} alt={tile.Title} width={144} />\n                        </Grid>\n                    )\n                )}\n            </Grid>\n        );\n        \n        <Box component=\"div\" display=\"inline\">inline</Box>\n        return this.state.rows\n            .map((tile) => (\n                <Box component=\"div\" display=\"inline\">\n                    <img src={tile.Poster} alt={tile.Title} width={99} />\n                </Box>\n            ));\n    }\n    \n    process() {\n        var seasons = this.state.seasons;\n        if (!seasons.length){\n            return false;\n        }\n    \n        var rows = []\n        var numbers = [];\n        seasons.forEach(season => {\n            var row = {};\n            const episodes = season.Episodes || [];\n            episodes.forEach(episode => {\n                row[episode.Episode] = episode.imdbRating\n            });\n            rows.push(row);\n    \n            numbers.push(\n                Math.max( ...Object.keys(row).map(Number) )\n            );\n        })\n        \n        var max = Math.max( ...numbers );\n        var columns = [{ \n            field: 'id',\n            headerName: 'Season',\n        }]\n        for (var i = 1; i < max + 1; i++){\n            columns.push({\n                field: i,\n                headerName: 'E' + i,\n            });\n        }\n        \n        rows.forEach((row, index) => row['id'] = index + 1);\n    \n        return {\n            rows: rows,\n            columns: columns,\n        };\n    }\n\n    RatingsMap() {\n        const data = this.process();\n        if (!data){\n            return <div></div>;\n        }\n        \n        const { classes } = this.props;\n        return (\n            <Box className={classes.root}>\n                <ScrollTabs show={this.state.show} />\n\n                <DataGrid \n                    {...data}\n                    autoHeight\n                    getCellClassName={(params) => {\n                        if (params.field === 'id' || !params.value || isNaN(params.value)) {\n                            return '';\n                        }\n                        for (const [index, color] of colors.entries()) {\n                            if (Number(params.value) >= (9 - index)) {\n                                return color;\n                            }\n                        }\n                        return colors[colors.length - 1];\n                    }}\n                />\n            </Box>\n        );\n    }\n\n    render() {\n        return (\n            <ThemeProvider theme={createMuiTheme(dark)}>\n                <CssBaseline />\n                <div>\n                    <SearchAppBar\n                        onChange={this.onChange}\n                    />\n                    {this.ImageGridList()}\n                    {this.RatingsMap()}\n                </div>\n            </ThemeProvider>\n        );\n    }\n    \n    // hooks\n\n    onChange(event) { \n        event.preventDefault();     // prevents page from reloading on submit\n        console.log(event.target.value);\n        search(event.target.value)\n            .then(x => {\n                this.setState({ rows: x });\n            });\n    }\n    \n    handleSelect(imdbID) {\n        getShow(imdbID)\n            .then(x => {\n                this.setState({ show: x });\n\n                getAll(\n                    this.state.show.imdbID,\n                    Number(this.state.show.totalSeasons),\n                )\n                    .then(x => {\n                        this.setState({ seasons: x });\n                    });\n            });        \n    }\n} // end CommentForm component\n\nexport default withStyles(useStyles)(CommentForm);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport RatingsMap from './RatingsMap/RatingsMap'\n\nReactDOM.render(\n    <RatingsMap />,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}
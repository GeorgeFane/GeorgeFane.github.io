{"version":3,"sources":["RatingsMap/main.js","CrypChar/main.js","drawer.js","index.js"],"names":["require","config","url","apikey","MyForm","props","myChangeHandler","event","setState","username","target","value","state","data","a","fetch","this","then","x","Search","JSON","stringify","name","axios","get","params","s","search","TextField","type","label","onChange","show","React","Component","web3","address","abi","contract","slice","eth","Contract","defaultAccount","user","App","rows","getPastEvents","fromBlock","toBlock","res","map","returnValues","forEach","row","index","columns","split","header","field","width","Paper","style","height","pageSize","apps","icon","app","drawerWidth","useStyles","makeStyles","theme","root","flexGrow","backgroundColor","palette","background","paper","display","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","enteringScreen","menuButton","marginRight","hide","flexShrink","whiteSpace","drawerOpen","drawerClose","overflowX","spacing","breakpoints","up","toolbar","alignItems","justifyContent","padding","mixins","content","title","light","dark","MiniDrawer","classes","useState","open","setOpen","setValue","setTheme","appliedTheme","createMuiTheme","ThemeProvider","className","CssBaseline","AppBar","position","clsx","Toolbar","IconButton","color","aria-label","onClick","edge","Typography","variant","Drawer","direction","Divider","List","ListItem","button","ListItemIcon","ListItemText","primary","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.d21cbffc.chunk.js","sourcesContent":["import { TextField } from '@material-ui/core';\nimport React from 'react';\nimport axios from 'axios'\n\nrequire('dotenv').config()\nconst url = 'http://www.omdbapi.com';\nconst apikey = '14f8eef1';\n\nfunction search(name) {\n    return axios.get(url, {\n        params: {\n            apikey: apikey,\n            s: name\n        }\n    })\n        .then(x => x.data.Search);\n}\n\nexport default class MyForm extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            username: 'mad men',\n            data: [],\n        };\n    }\n    async componentDidMount() {\n        await fetch(url + '/?apikey=' + apikey + '&s=' + this.state.username)\n            .then(x => {\n                var data = x.data.Search;\n                this.setState({ data });\n            });\n    }\n    show() {\n        return (\n            <pre>\n                {JSON.stringify(this.state.data, null, 2)}\n            </pre>\n        )\n    }\n    myChangeHandler = (event) => {\n        this.setState({username: event.target.value});\n    }\n    render() {\n        var name = 'mad men';\n        var data = search(name);\n        var data = require('./search.json');\n        return (\n            <div>\n                <form>\n                    <h1>Hello {this.state.username}</h1>\n                    <TextField\n                        type='text'\n                        label=\"Movie or Show Name\"\n                        onChange={this.myChangeHandler}\n                    />\n                </form>\n                    \n                {this.show()}\n            </div>\n        );\n    }\n}","import { DataGrid } from '@material-ui/data-grid';\nimport { XGrid } from '@material-ui/x-grid';\nimport { Paper } from '@material-ui/core';\nimport React from 'react';\n\nconst TRUFFLE = '8f7572d1-e253-420a-93bc-2ed8a6f051e6';\nconst url = 'https://sandbox.truffleteams.com/' + TRUFFLE;\n\nvar Web3 = require('web3');\nvar web3 = new Web3(url);\n\nvar address = require('./contract/address.json');\nvar abi = require('./contract/abi.json');\n\nvar accounts = require('./contract/accounts.json');\nvar user, charity, store = accounts.slice(0, 3);\n\nvar contract = new web3.eth.Contract(abi, address);\ncontract.defaultAccount = user;\n\nexport default class App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            rows: [],\n        }\n    }\n\n    componentDidMount() {\n        var rows = contract.getPastEvents('trans', {fromBlock: 0, toBlock: 'latest'})\n            .then(res => res.map(event => event.returnValues))\n        var rows = require('./rows.json');        \n        rows.forEach((row, index) => row['id'] = index);\n        this.setState({ rows });\n    }\n\n    render() {\n        var headers = 'id TimestampEST From To Continent Value Memo TxnHash'.split(' ');\n        var columns = headers.map(header => (\n            {\n                field: header, \n                width: 200,\n            }\n        ));\n\n        return (\n            <Paper style={{ height: 400, width: '100%' }}>\n                <DataGrid \n                    columns={columns} \n                    rows={this.state.rows}\n                    pageSize={5}\n                />\n            </Paper>\n        );\n    }\n}","import React from 'react';\nimport clsx from 'clsx';\nimport { createMuiTheme, makeStyles, useTheme } from '@material-ui/core/styles';\nimport Box from '@material-ui/core/Box';\nimport Button from '@material-ui/core/Button';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport MailIcon from '@material-ui/icons/Mail';\nimport RefreshIcon from '@material-ui/icons/Refresh';\n\nimport Paper from \"@material-ui/core/Paper\";\nimport { ThemeProvider } from \"@material-ui/core\";\nimport Brightness3Icon from \"@material-ui/icons/Brightness3\";\nimport Brightness7Icon from \"@material-ui/icons/Brightness7\";\nimport LiveTvIcon from \"@material-ui/icons/LiveTv\";\nimport AccountBalanceIcon from '@material-ui/icons/AccountBalance';\nimport { DataGrid } from '@material-ui/data-grid'\n\nimport Table from './datagrid.js'\nimport RatingsMap from './RatingsMap/main.js'\nimport CrypChar from './CrypChar/main.js'\n\nvar apps = [\n    {\n        name: 'RatingsMap',\n        icon: <LiveTvIcon />,\n        app: <RatingsMap />,\n    },\n    {\n        name: 'CrypChar',\n        icon: <AccountBalanceIcon />,\n        app: <CrypChar />,\n    },\n];\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n        backgroundColor: theme.palette.background.paper,\n        display: 'flex',\n        height: '100%',\n    },\n    appBar: {\n        zIndex: theme.zIndex.drawer + 1,\n        transition: theme.transitions.create(['width', 'margin'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n    },\n    appBarShift: {\n        marginLeft: drawerWidth,\n        width: `calc(100% - ${drawerWidth}px)`,\n        transition: theme.transitions.create(['width', 'margin'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    menuButton: {\n        marginRight: 36,\n    },\n    hide: {\n        display: 'none',\n    },\n    drawer: {\n        width: drawerWidth,\n        flexShrink: 0,\n        whiteSpace: 'nowrap',\n    },\n    drawerOpen: {\n        width: drawerWidth,\n        transition: theme.transitions.create('width', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    drawerClose: {\n        transition: theme.transitions.create('width', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        overflowX: 'hidden',\n        width: theme.spacing(7) + 1,\n        [theme.breakpoints.up('sm')]: {\n            width: theme.spacing(9) + 1,\n        },\n    },\n    toolbar: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'flex-end',\n        padding: theme.spacing(0, 1),\n        // necessary for content to be below app bar\n        ...theme.mixins.toolbar,\n    },\n    content: {\n        flexGrow: 1,\n        padding: theme.spacing(3),\n    },\n    title: {\n        flexGrow: 1,\n    },\n}));\n\nexport const light = {\n    palette: {\n        type: \"light\"\n    }\n};\nexport const dark = {\n    palette: {\n        type: \"dark\"\n    }\n};\n\nexport default function MiniDrawer() {\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(false);\n\n    const handleDrawerOpen = () => {\n        setOpen(true);\n    };\n\n    const handleDrawerClose = () => {\n        setOpen(false);\n    };\n\n    const [value, setValue] = React.useState(0);\n    \n    const [theme, setTheme] = React.useState(true);\n    const icon = !theme ? <Brightness7Icon /> : <Brightness3Icon />;\n    const appliedTheme = createMuiTheme(theme ? light : dark);\n\n    return (\n        <ThemeProvider theme={appliedTheme}>\n          <Paper>\n        <div className={classes.root}>\n            <CssBaseline />\n            <AppBar\n                position=\"fixed\"\n                className={clsx(classes.appBar, {\n                    [classes.appBarShift]: open,\n                })}\n            >\n                <Toolbar>\n                    <IconButton\n                        color=\"inherit\"\n                        aria-label=\"open drawer\"\n                        onClick={handleDrawerOpen}\n                        edge=\"start\"\n                        className={clsx(classes.menuButton, {\n                            [classes.hide]: open,\n                        })}\n                    >\n                        <MenuIcon />\n                    </IconButton>\n                    \n                    <Typography variant=\"h4\" className={classes.title}>\n                        George Fane\n                    </Typography>\n\n                    <IconButton\n                        edge=\"end\"\n                        color=\"inherit\"\n                        aria-label=\"mode\"\n                        onClick={() => setTheme(!theme)}\n                    >\n                        {icon}\n                    </IconButton>\n                </Toolbar>\n            </AppBar>\n            <Drawer\n                variant=\"permanent\"\n                className={clsx(classes.drawer, {\n                    [classes.drawerOpen]: open,\n                    [classes.drawerClose]: !open,\n                })}\n                classes={{\n                    paper: clsx({\n                        [classes.drawerOpen]: open,\n                        [classes.drawerClose]: !open,\n                    }),\n                }}\n            >\n                <div className={classes.toolbar}>\n                    <IconButton onClick={handleDrawerClose}>\n                        {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}\n                    </IconButton>\n                </div>\n                <Divider />\n\n                <List>\n                    { apps.map((row, index) => (\n                        <ListItem \n                            button \n                            onClick={() => setValue(index)}\n                        >\n                            <ListItemIcon >\n                                {row.icon}\n                            </ ListItemIcon>\n                            <ListItemText primary={row.name} />\n                        </ListItem>\n                    ))}\n                </List>\n            </Drawer>\n            <Paper className={classes.content}>\n                <div className={classes.toolbar} />\n                {apps.map((row, index) => (value === index && row.app))}\n            </Paper>\n        </div>\n      </Paper>\n    </ThemeProvider>\n    );\n}\n","import React, { StrictMode } from 'react';\nimport ReactDOM from 'react-dom';\n\nimport Drawer from './drawer.js'\nimport DataGrid from './datagrid.js'\n\nconst rootElement = document.getElementById('root');\nReactDOM.render(\n    <StrictMode>\n        <Drawer />\n    </StrictMode>,\n    rootElement\n);"],"sourceRoot":""}